// <auto-generated />
using System;
using HoiNongDan.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HoiNongDan.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230715130530_addHoiVienVayVon")]
    partial class addHoiVienVayVon
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HoiNongDan.Models.BacLuong", b =>
                {
                    b.Property<Guid>("MaBacLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HeSo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaNgachLuong")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenBacLuong")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaBacLuong");

                    b.HasIndex("MaNgachLuong");

                    b.ToTable("BacLuongModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.Bank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bank", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.CanBo", b =>
                {
                    b.Property<Guid>("IDCanBo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<string>("ChoOHienNay")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ChuyenNganh")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<decimal?>("HeSoLuong")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HinhAnh")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("IdCoSo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDepartment")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("KhoanDenNgay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KhoanTuNgay")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LuongKhoan")
                        .HasColumnType("int");

                    b.Property<Guid?>("MaBacLuong")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaCanBo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("MaChucVu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaDanToc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaHeDaoTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaHocHam")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaNgachLuong")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaPhanHe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaSoThue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaTinhTrang")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaTonGiao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaTrinhDoChinhTri")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaTrinhDoHocVan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("MaTrinhDoNgoaiNgu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaTrinhDoTinHoc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgayCapCCCD")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayNangBacLuong")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayThamGiaCongTac")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayVaoBienChe")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayVaoDangChinhThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayvaoDangDuBi")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiSinh")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal?>("PhuCapChucVu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PhuCapKhuVuc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PhuCapKiemNhiem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PhuCapVuotKhung")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SoBHXH")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SoBHYT")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SoCCCD")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IDCanBo");

                    b.HasIndex("IdCoSo");

                    b.HasIndex("IdDepartment");

                    b.HasIndex("MaBacLuong");

                    b.HasIndex("MaChucVu");

                    b.HasIndex("MaDanToc");

                    b.HasIndex("MaHeDaoTao");

                    b.HasIndex("MaHocHam");

                    b.HasIndex("MaPhanHe");

                    b.HasIndex("MaTinhTrang");

                    b.HasIndex("MaTonGiao");

                    b.HasIndex("MaTrinhDoChinhTri");

                    b.HasIndex("MaTrinhDoHocVan");

                    b.HasIndex("MaTrinhDoNgoaiNgu");

                    b.HasIndex("MaTrinhDoTinHoc");

                    b.ToTable("CanBo", "NS");
                });

            modelBuilder.Entity("HoiNongDan.Models.CanBoDenTuoiNghiHuuVM", b =>
                {
                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<decimal?>("HeSoLuong")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IDCanBo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaCanBo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenBacLuong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCoSo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDonVi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNgachLuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenPhanHe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Thang")
                        .HasColumnType("int");

                    b.Property<int>("Tuoi")
                        .HasColumnType("int");

                    b.ToTable("CanBoDenTuoiNghiHuuVMs");
                });

            modelBuilder.Entity("HoiNongDan.Models.ChucVu", b =>
                {
                    b.Property<Guid>("MaChucVu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("HeSoChucVu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<decimal?>("PhuCapDienThoai")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("MaChucVu");

                    b.ToTable("ChucVuModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.ChuyenNganh", b =>
                {
                    b.Property<string>("MaChuyenNganh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenChuyenNganh")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaChuyenNganh");

                    b.ToTable("ChuyenNganh", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.CoSo", b =>
                {
                    b.Property<Guid>("IdCoSo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 7, 15, 20, 5, 29, 335, DateTimeKind.Local).AddTicks(1966));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenCoSo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdCoSo");

                    b.ToTable("CoSoModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.DanhHieuKhenThuong", b =>
                {
                    b.Property<string>("MaDanhHieuKhenThuong")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenDanhHieuKhenThuong")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("MaDanhHieuKhenThuong");

                    b.ToTable("DanhHieuKhenThuong", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.DanToc", b =>
                {
                    b.Property<string>("MaDanToc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenDanToc")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("MaDanToc");

                    b.ToTable("DanTocModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DepartmentCode");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("IDCoSo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DepartmentName");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IDCoSo");

                    b.ToTable("Department", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.DiaBanHoatDong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaPhuongXa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaQuanHuyen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaTinhThanhPho")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NgayThanhLap")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenDiaBanHoatDong")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("MaPhuongXa");

                    b.HasIndex("MaQuanHuyen");

                    b.HasIndex("MaTinhThanhPho");

                    b.ToTable("DiaBanHoatDong", "HV");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.Account", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Actived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("AccountId");

                    b.ToTable("Account", "pms");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.AccountInRoleModel", b =>
                {
                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RolesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AccountId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("AccountInRoleModel", "pms");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.FunctionModel", b =>
                {
                    b.Property<string>("FunctionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FunctionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OrderIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("FunctionId");

                    b.ToTable("FunctionModel", "pms");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.HistoryModel", b =>
                {
                    b.Property<Guid>("HistoryModifyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HistoryModifyId");

                    b.ToTable("HistoryModel", "utilities");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.MasterData.HocHam", b =>
                {
                    b.Property<string>("MaHocHam")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenHocHam")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("MaHocHam");

                    b.ToTable("HocHamModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.MasterData.PhuongXa", b =>
                {
                    b.Property<string>("MaPhuongXa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaQuanHuyen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenPhuongXa")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("MaPhuongXa");

                    b.HasIndex("MaQuanHuyen");

                    b.ToTable("PhuongXaModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.MasterData.TinhTrang", b =>
                {
                    b.Property<string>("MaTinhTrang")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenTinhTrang")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("MaTinhTrang");

                    b.ToTable("TinhTrangModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.MasterData.TrinhDoHocVan", b =>
                {
                    b.Property<string>("MaTrinhDoHocVan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenTrinhDoHocVan")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaTrinhDoHocVan");

                    b.ToTable("TrinhDoHocVanModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.MenuModel", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Href")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValue("#");

                    b.Property<string>("Icon")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MenuCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("MenuIdParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MenuType")
                        .HasColumnType("int");

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.HasKey("MenuId");

                    b.HasIndex("MenuIdParent");

                    b.ToTable("MenuModel", "pms");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.NgonNgu", b =>
                {
                    b.Property<string>("MaNgonNgu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenNgonNgu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("MaNgonNgu");

                    b.ToTable("NgonNguModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.NhanSu.QuaTrinhKhenThuong", b =>
                {
                    b.Property<Guid>("IDQuaTrinhKhenThuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<Guid>("IDCanBo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LyDo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MaDanhHieuKhenThuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaHinhThucKhenThuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgayQuyetDinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiKy")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SoQuyetDinh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDQuaTrinhKhenThuong");

                    b.HasIndex("IDCanBo");

                    b.HasIndex("MaDanhHieuKhenThuong");

                    b.HasIndex("MaHinhThucKhenThuong");

                    b.ToTable("QuaTrinhKhenThuong", "NS");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.PageFunctionModel", b =>
                {
                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FunctionId")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MenuId", "FunctionId");

                    b.HasIndex("FunctionId");

                    b.ToTable("PageFunctionModel", "pms");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.PagePermissionModel", b =>
                {
                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FunctionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RolesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MenuId", "FunctionId", "RolesId");

                    b.HasIndex("FunctionId");

                    b.HasIndex("RolesId");

                    b.ToTable("PagePermissionModel", "pms");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.RolesModel", b =>
                {
                    b.Property<Guid>("RolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Actived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("RolesCode")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RolesName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("RolesId");

                    b.ToTable("RolesModel", "pms");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.TrinhDoChinhTri", b =>
                {
                    b.Property<string>("MaTrinhDoChinhTri")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenTrinhDoChinhTri")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaTrinhDoChinhTri");

                    b.ToTable("TrinhDoChinhTriModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.TrinhDoNgoaiNgu", b =>
                {
                    b.Property<Guid>("MaTrinhDoNgoaiNgu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaNgonNgu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenTrinhDoNgoaiNgu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaTrinhDoNgoaiNgu");

                    b.HasIndex("MaNgonNgu");

                    b.ToTable("TrinhDoNgoaiNguModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.TrinhDoTinHoc", b =>
                {
                    b.Property<string>("MaTrinhDoTinHoc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenTrinhDoTinHoc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaTrinhDoTinHoc");

                    b.ToTable("TrinhDoTinHocModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.FileDinhKem", b =>
                {
                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IDLoaiDinhKem")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCanBo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Key");

                    b.HasIndex("IDLoaiDinhKem");

                    b.HasIndex("IdCanBo");

                    b.ToTable("FileDinhKem", "NS");
                });

            modelBuilder.Entity("HoiNongDan.Models.HeDaoTao", b =>
                {
                    b.Property<string>("MaHeDaoTao")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenHeDaoTao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("MaHeDaoTao");

                    b.ToTable("HeDaoTaoModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.HinhThucDaoTao", b =>
                {
                    b.Property<string>("MaHinhThucDaoTao")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenHinhThucDaoTao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaHinhThucDaoTao");

                    b.ToTable("HinhThucDaoTao", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.HinhThucKhenThuong", b =>
                {
                    b.Property<string>("MaHinhThucKhenThuong")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenHinhThucKhenThuong")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("MaHinhThucKhenThuong");

                    b.ToTable("HinhThucKhenThuong", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.HinhThucKyLuat", b =>
                {
                    b.Property<string>("MaHinhThucKyLuat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("DinhChi")
                        .HasColumnType("bit");

                    b.Property<string>("TenHinhThucKyLuat")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("MaHinhThucKyLuat");

                    b.ToTable("HinhThucKyLuat", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.HoiVienVayVon", b =>
                {
                    b.Property<Guid>("IDVayVon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DenNgay")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IDCanBo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("LaiSuatVay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTraNoCuoiCung")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDungVay")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("SoTienVay")
                        .HasColumnType("bigint");

                    b.Property<int>("ThoiHangChoVai")
                        .HasColumnType("int");

                    b.Property<DateTime>("TuNgay")
                        .HasColumnType("datetime2");

                    b.HasKey("IDVayVon");

                    b.HasIndex("IDCanBo");

                    b.ToTable("HoiVienVayVon", "HV");
                });

            modelBuilder.Entity("HoiNongDan.Models.HuuTri", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("IDCanBo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayQuyetDinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiKy")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SoQuyetDinh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IDCanBo")
                        .IsUnique();

                    b.ToTable("HuuTri", "NS");
                });

            modelBuilder.Entity("HoiNongDan.Models.KhuVuc", b =>
                {
                    b.Property<string>("MaKhuVuc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenKhuVuc")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("MaKhuVuc");

                    b.ToTable("KhuVucModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.LoaiBangCap", b =>
                {
                    b.Property<string>("MaLoaiBangCap")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenLoaiBangCap")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaLoaiBangCap");

                    b.ToTable("LoaiBangCap", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.LoaiDinhKem", b =>
                {
                    b.Property<string>("IDLoaiDinhKem")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenLoaiDinhKem")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IDLoaiDinhKem");

                    b.ToTable("LoaiDinhKem", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.LoaiQuanHeGiaDinh", b =>
                {
                    b.Property<Guid>("IDLoaiQuanHeGiaDinh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenLoaiQuanHeGiaDinh")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("IDLoaiQuanHeGiaDinh");

                    b.ToTable("LoaiQuanHeGiaDinh", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.NgachLuong", b =>
                {
                    b.Property<string>("MaNgachLuong")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Actived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 7, 15, 20, 5, 29, 335, DateTimeKind.Local).AddTicks(7302));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaLoai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NamTangLuong")
                        .HasColumnType("int");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenNgachLuong")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaNgachLuong");

                    b.ToTable("NgachLuongModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.PhanHe", b =>
                {
                    b.Property<string>("MaPhanHe")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenPhanHe")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("MaPhanHe");

                    b.ToTable("PhanHeModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.QuanHeGiaDinh", b =>
                {
                    b.Property<Guid>("IDQuanheGiaDinh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid?>("IDCanBo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDHoiVien")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDLoaiQuanHeGiaDinh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NgaySinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NgheNghiep")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NoiLamVien")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("IDQuanheGiaDinh");

                    b.HasIndex("IDCanBo");

                    b.HasIndex("IDLoaiQuanHeGiaDinh");

                    b.ToTable("QuanHeGiaDinh", "NS");
                });

            modelBuilder.Entity("HoiNongDan.Models.QuanHuyen", b =>
                {
                    b.Property<string>("MaQuanHuyen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaTinhThanhPho")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenQuanHuyen")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("MaQuanHuyen");

                    b.HasIndex("MaTinhThanhPho");

                    b.ToTable("QuanHuyenModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.QuaTrinhBoiDuong", b =>
                {
                    b.Property<Guid>("IDQuaTrinhBoiDuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileDinhKem")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("IDCanBo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaHinhThucDaoTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiBoiDuong")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("IDQuaTrinhBoiDuong");

                    b.HasIndex("IDCanBo");

                    b.HasIndex("MaHinhThucDaoTao");

                    b.ToTable("QuaTrinhBoiDuong", "NS");
                });

            modelBuilder.Entity("HoiNongDan.Models.QuaTrinhBoNhiem", b =>
                {
                    b.Property<Guid>("IdQuaTrinhBoNhiem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("HeSoChucVu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IDCanBo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCoSo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdCoSoCu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDepartment")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdDepartmentCu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Loai")
                        .HasColumnType("int");

                    b.Property<Guid>("MaChucVu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MaChucVuCu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayQuyetDinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiKy")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SoQuyetDinh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdQuaTrinhBoNhiem");

                    b.HasIndex("IDCanBo");

                    b.HasIndex("IdCoSo");

                    b.HasIndex("IdDepartment");

                    b.HasIndex("MaChucVu");

                    b.ToTable("QuaTrinhBoNhiem", "NS");
                });

            modelBuilder.Entity("HoiNongDan.Models.QuaTrinhCongTac", b =>
                {
                    b.Property<Guid>("IDQuaTrinhCongTac")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DenNgay")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("IDCanBo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MaChucVu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NoiLamViec")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("TuNgay")
                        .HasColumnType("datetime2");

                    b.HasKey("IDQuaTrinhCongTac");

                    b.HasIndex("IDCanBo");

                    b.HasIndex("MaChucVu");

                    b.ToTable("QuaTrinhCongTac", "NS");
                });

            modelBuilder.Entity("HoiNongDan.Models.QuaTrinhDaoTao", b =>
                {
                    b.Property<Guid>("IDQuaTrinhDaoTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoSoDaoTao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileDinhKem")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("IDCanBo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("LuanAnTN")
                        .HasColumnType("bit");

                    b.Property<string>("MaChuyenNganh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaHinhThucDaoTao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaLoaiBangCap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NgayTotNghiep")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("datetime2");

                    b.Property<string>("QuocGia")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("IDQuaTrinhDaoTao");

                    b.HasIndex("IDCanBo");

                    b.HasIndex("MaChuyenNganh");

                    b.HasIndex("MaHinhThucDaoTao");

                    b.HasIndex("MaLoaiBangCap");

                    b.ToTable("QuaTrinhDaoTao", "NS");
                });

            modelBuilder.Entity("HoiNongDan.Models.QuaTrinhKyLuat", b =>
                {
                    b.Property<Guid>("IdQuaTrinhKyLuat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<Guid>("IDCanBo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MaHinhThucKyLuat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgayKy")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiKy")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SoQuyetDinh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdQuaTrinhKyLuat");

                    b.HasIndex("IDCanBo");

                    b.HasIndex("MaHinhThucKyLuat");

                    b.ToTable("QuaTrinhKyLuat", "NS");
                });

            modelBuilder.Entity("HoiNongDan.Models.QuaTrinhMienNhiem", b =>
                {
                    b.Property<Guid>("IDQuaTrinhMienNhiem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("HeSoChucVu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IDCanBo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCoSo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDepartment")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MaChucVu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayQuyetDinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiKy")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SoQuyetDinh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IDQuaTrinhMienNhiem");

                    b.HasIndex("IDCanBo");

                    b.HasIndex("IdCoSo");

                    b.HasIndex("IdDepartment");

                    b.HasIndex("MaChucVu");

                    b.ToTable("QuaTrinhMienNhiem", "NS");
                });

            modelBuilder.Entity("HoiNongDan.Models.TinhThanhPho", b =>
                {
                    b.Property<string>("MaTinhThanhPho")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaKhuVuc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenTinhThanhPho")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("MaTinhThanhPho");

                    b.HasIndex("MaKhuVuc");

                    b.ToTable("TinhThanhPhoModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.TonGiao", b =>
                {
                    b.Property<string>("MaTonGiao")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenTonGiao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("MaTonGiao");

                    b.ToTable("TonGiaoModel", "tMasterData");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("HoiNongDan.Models.BacLuong", b =>
                {
                    b.HasOne("HoiNongDan.Models.NgachLuong", "NgachLuong")
                        .WithMany("BacLuongs")
                        .HasForeignKey("MaNgachLuong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BacLuong_NgachLuong");

                    b.Navigation("NgachLuong");
                });

            modelBuilder.Entity("HoiNongDan.Models.CanBo", b =>
                {
                    b.HasOne("HoiNongDan.Models.CoSo", "CoSo")
                        .WithMany("CanBos")
                        .HasForeignKey("IdCoSo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CanBo_CoSo");

                    b.HasOne("HoiNongDan.Models.Department", "Department")
                        .WithMany("CanBos")
                        .HasForeignKey("IdDepartment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CanBo_Department");

                    b.HasOne("HoiNongDan.Models.BacLuong", "BacLuong")
                        .WithMany("CanBos")
                        .HasForeignKey("MaBacLuong")
                        .HasConstraintName("FK_CanBo_BacLuong");

                    b.HasOne("HoiNongDan.Models.ChucVu", "ChucVu")
                        .WithMany("CanBos")
                        .HasForeignKey("MaChucVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CanBo_ChucVu");

                    b.HasOne("HoiNongDan.Models.DanToc", "DanToc")
                        .WithMany("CanBos")
                        .HasForeignKey("MaDanToc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CanBo_DanToc");

                    b.HasOne("HoiNongDan.Models.HeDaoTao", "HeDaoTao")
                        .WithMany("CanBos")
                        .HasForeignKey("MaHeDaoTao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CanBo_HeDaoTao");

                    b.HasOne("HoiNongDan.Models.Entitys.MasterData.HocHam", "HocHam")
                        .WithMany("CanBos")
                        .HasForeignKey("MaHocHam")
                        .HasConstraintName("FK_CanBo_HocHam");

                    b.HasOne("HoiNongDan.Models.PhanHe", "PhanHe")
                        .WithMany("CanBos")
                        .HasForeignKey("MaPhanHe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CanBo_PhanHe");

                    b.HasOne("HoiNongDan.Models.Entitys.MasterData.TinhTrang", "TinhTrang")
                        .WithMany("CanBos")
                        .HasForeignKey("MaTinhTrang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKg_CanBo_TinhTrang");

                    b.HasOne("HoiNongDan.Models.TonGiao", "TonGiao")
                        .WithMany("CanBos")
                        .HasForeignKey("MaTonGiao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CanBo_TonGiao");

                    b.HasOne("HoiNongDan.Models.Entitys.TrinhDoChinhTri", "TrinhDoChinhTri")
                        .WithMany("CanBos")
                        .HasForeignKey("MaTrinhDoChinhTri")
                        .HasConstraintName("FK_CanBo_TrinhDoChinhTri");

                    b.HasOne("HoiNongDan.Models.Entitys.MasterData.TrinhDoHocVan", "TrinhDoHocVan")
                        .WithMany("CanBos")
                        .HasForeignKey("MaTrinhDoHocVan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CanBo_TrinhDoHocVan");

                    b.HasOne("HoiNongDan.Models.Entitys.TrinhDoNgoaiNgu", "TrinhDoNgoaiNgu")
                        .WithMany("CanBos")
                        .HasForeignKey("MaTrinhDoNgoaiNgu")
                        .HasConstraintName("FK_CanBo_TrinhDoNgoaiNgu");

                    b.HasOne("HoiNongDan.Models.Entitys.TrinhDoTinHoc", "TrinhDoTinHoc")
                        .WithMany("CanBos")
                        .HasForeignKey("MaTrinhDoTinHoc")
                        .HasConstraintName("FK_CanBo_TrinhDoTinHoc");

                    b.Navigation("BacLuong");

                    b.Navigation("ChucVu");

                    b.Navigation("CoSo");

                    b.Navigation("DanToc");

                    b.Navigation("Department");

                    b.Navigation("HeDaoTao");

                    b.Navigation("HocHam");

                    b.Navigation("PhanHe");

                    b.Navigation("TinhTrang");

                    b.Navigation("TonGiao");

                    b.Navigation("TrinhDoChinhTri");

                    b.Navigation("TrinhDoHocVan");

                    b.Navigation("TrinhDoNgoaiNgu");

                    b.Navigation("TrinhDoTinHoc");
                });

            modelBuilder.Entity("HoiNongDan.Models.Department", b =>
                {
                    b.HasOne("HoiNongDan.Models.CoSo", "CoSo")
                        .WithMany("Departments")
                        .HasForeignKey("IDCoSo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_Department_CoSo");

                    b.Navigation("CoSo");
                });

            modelBuilder.Entity("HoiNongDan.Models.DiaBanHoatDong", b =>
                {
                    b.HasOne("HoiNongDan.Models.Entitys.MasterData.PhuongXa", "PhuongXa")
                        .WithMany("DiaBanHoatDongs")
                        .HasForeignKey("MaPhuongXa")
                        .HasConstraintName("FK_DiaBanHoatDong_PhuongXa");

                    b.HasOne("HoiNongDan.Models.QuanHuyen", "QuanHuyen")
                        .WithMany("DiaBanHoatDongs")
                        .HasForeignKey("MaQuanHuyen")
                        .HasConstraintName("FK_DiaBanHoatDong_QuanHuyen");

                    b.HasOne("HoiNongDan.Models.TinhThanhPho", "TinhThanhPho")
                        .WithMany("DiaBanHoatDongs")
                        .HasForeignKey("MaTinhThanhPho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DiaBanHoatDong_TinhThanhPho");

                    b.Navigation("PhuongXa");

                    b.Navigation("QuanHuyen");

                    b.Navigation("TinhThanhPho");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.AccountInRoleModel", b =>
                {
                    b.HasOne("HoiNongDan.Models.Entitys.Account", "Account")
                        .WithMany("AccountInRoleModels")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired()
                        .HasConstraintName("FK_AccountInRoleModel_Account");

                    b.HasOne("HoiNongDan.Models.Entitys.RolesModel", "RolesModel")
                        .WithMany("AccountInRoleModels")
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AccountInRoleModel_RolesModel");

                    b.Navigation("Account");

                    b.Navigation("RolesModel");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.MasterData.PhuongXa", b =>
                {
                    b.HasOne("HoiNongDan.Models.QuanHuyen", "QuanHuyen")
                        .WithMany("PhuongXas")
                        .HasForeignKey("MaQuanHuyen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PhuongXa_QuanHuyen");

                    b.Navigation("QuanHuyen");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.MenuModel", b =>
                {
                    b.HasOne("HoiNongDan.Models.Entitys.MenuModel", null)
                        .WithMany("Children")
                        .HasForeignKey("MenuIdParent");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.NhanSu.QuaTrinhKhenThuong", b =>
                {
                    b.HasOne("HoiNongDan.Models.CanBo", "CanBo")
                        .WithMany("QuaTrinhKhenThuongs")
                        .HasForeignKey("IDCanBo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhKhenThuong_CanBo");

                    b.HasOne("HoiNongDan.Models.DanhHieuKhenThuong", "DanhHieuKhenThuong")
                        .WithMany("QuaTrinhKhenThuong")
                        .HasForeignKey("MaDanhHieuKhenThuong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuanHeGiaDinh_DanhHieuKhenThuong");

                    b.HasOne("HoiNongDan.Models.HinhThucKhenThuong", "HinhThucKhenThuong")
                        .WithMany("QuaTrinhKhenThuong")
                        .HasForeignKey("MaHinhThucKhenThuong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuanHeGiaDinh_HinhThucKhenThuong");

                    b.Navigation("CanBo");

                    b.Navigation("DanhHieuKhenThuong");

                    b.Navigation("HinhThucKhenThuong");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.PageFunctionModel", b =>
                {
                    b.HasOne("HoiNongDan.Models.Entitys.FunctionModel", "FunctionModel")
                        .WithMany("PageFunctionModels")
                        .HasForeignKey("FunctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PageFunctionModel_FunctionModel");

                    b.HasOne("HoiNongDan.Models.Entitys.MenuModel", "MenuModel")
                        .WithMany("PageFunctionModels")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PageFunctionModel_MenuModel");

                    b.Navigation("FunctionModel");

                    b.Navigation("MenuModel");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.PagePermissionModel", b =>
                {
                    b.HasOne("HoiNongDan.Models.Entitys.FunctionModel", "Function")
                        .WithMany("PagePermissionModels")
                        .HasForeignKey("FunctionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_PagePermissionModel_Function");

                    b.HasOne("HoiNongDan.Models.Entitys.MenuModel", "Menu")
                        .WithMany("PagePermissionModels")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_PagePermissionModel_Menu");

                    b.HasOne("HoiNongDan.Models.Entitys.RolesModel", "Roles")
                        .WithMany("PagePermissionModels")
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PagePermissionModel_Roles");

                    b.Navigation("Function");

                    b.Navigation("Menu");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.TrinhDoNgoaiNgu", b =>
                {
                    b.HasOne("HoiNongDan.Models.Entitys.NgonNgu", "NgonNgu")
                        .WithMany("TrinhDoNgoaiNgus")
                        .HasForeignKey("MaNgonNgu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TrinhDoNgoaiNgu_TrinhDoNgoaiNgu");

                    b.Navigation("NgonNgu");
                });

            modelBuilder.Entity("HoiNongDan.Models.FileDinhKem", b =>
                {
                    b.HasOne("HoiNongDan.Models.LoaiDinhKem", "LoaiDinhKem")
                        .WithMany("FileDinhKems")
                        .HasForeignKey("IDLoaiDinhKem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_FileDinhKem_LoaiDinhKem");

                    b.HasOne("HoiNongDan.Models.CanBo", "CanBo")
                        .WithMany("FileDinhKems")
                        .HasForeignKey("IdCanBo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_FileDinhKem_CanBo");

                    b.Navigation("CanBo");

                    b.Navigation("LoaiDinhKem");
                });

            modelBuilder.Entity("HoiNongDan.Models.HoiVienVayVon", b =>
                {
                    b.HasOne("HoiNongDan.Models.CanBo", "CanBo")
                        .WithMany("HoiVienVayVons")
                        .HasForeignKey("IDCanBo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_HoiVienVayVon_HoiVien");

                    b.Navigation("CanBo");
                });

            modelBuilder.Entity("HoiNongDan.Models.HuuTri", b =>
                {
                    b.HasOne("HoiNongDan.Models.CanBo", "CanBo")
                        .WithOne("HuuTri")
                        .HasForeignKey("HoiNongDan.Models.HuuTri", "IDCanBo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_HuuTri_CanBo");

                    b.Navigation("CanBo");
                });

            modelBuilder.Entity("HoiNongDan.Models.QuanHeGiaDinh", b =>
                {
                    b.HasOne("HoiNongDan.Models.CanBo", "CanBo")
                        .WithMany("QuanHeGiaDinhs")
                        .HasForeignKey("IDCanBo")
                        .HasConstraintName("FK_QuanHeGiaDinh_CanBo");

                    b.HasOne("HoiNongDan.Models.LoaiQuanHeGiaDinh", "LoaiQuanhe")
                        .WithMany("QuanHeGiaDinhs")
                        .HasForeignKey("IDLoaiQuanHeGiaDinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuanHeGiaDinh_LoaiQuanHeGiaDinh");

                    b.Navigation("CanBo");

                    b.Navigation("LoaiQuanhe");
                });

            modelBuilder.Entity("HoiNongDan.Models.QuanHuyen", b =>
                {
                    b.HasOne("HoiNongDan.Models.TinhThanhPho", "TinhThanhPho")
                        .WithMany("QuanHuyens")
                        .HasForeignKey("MaTinhThanhPho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuanHuyen_TinhThanhPho");

                    b.Navigation("TinhThanhPho");
                });

            modelBuilder.Entity("HoiNongDan.Models.QuaTrinhBoiDuong", b =>
                {
                    b.HasOne("HoiNongDan.Models.CanBo", "CanBo")
                        .WithMany("QuaTrinhBoiDuongs")
                        .HasForeignKey("IDCanBo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhBoiDuong_CanBo");

                    b.HasOne("HoiNongDan.Models.HinhThucDaoTao", "HinhThucDaoTao")
                        .WithMany("QuaTrinhBoiDuongs")
                        .HasForeignKey("MaHinhThucDaoTao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhBoiDuong_HinhThucDaoTao");

                    b.Navigation("CanBo");

                    b.Navigation("HinhThucDaoTao");
                });

            modelBuilder.Entity("HoiNongDan.Models.QuaTrinhBoNhiem", b =>
                {
                    b.HasOne("HoiNongDan.Models.CanBo", "CanBo")
                        .WithMany("QuaTrinhBoNhiems")
                        .HasForeignKey("IDCanBo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhBoNhiem_CanBo");

                    b.HasOne("HoiNongDan.Models.CoSo", "CoSo")
                        .WithMany("QuaTrinhBoNhiems")
                        .HasForeignKey("IdCoSo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhBoNhiem_CoSo");

                    b.HasOne("HoiNongDan.Models.Department", "Department")
                        .WithMany("QuaTrinhBoNhiems")
                        .HasForeignKey("IdDepartment")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhBoNhiem_Department");

                    b.HasOne("HoiNongDan.Models.ChucVu", "ChucVu")
                        .WithMany("QuaTrinhBoNhiems")
                        .HasForeignKey("MaChucVu")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhBoNhiem_ChucVu");

                    b.Navigation("CanBo");

                    b.Navigation("ChucVu");

                    b.Navigation("CoSo");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("HoiNongDan.Models.QuaTrinhCongTac", b =>
                {
                    b.HasOne("HoiNongDan.Models.CanBo", "CanBo")
                        .WithMany("QuaTrinhCongTacs")
                        .HasForeignKey("IDCanBo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhCongTac_CanBo");

                    b.HasOne("HoiNongDan.Models.ChucVu", "ChucVu")
                        .WithMany("QuaTrinhCongTacs")
                        .HasForeignKey("MaChucVu")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhCongTac_ChucVu");

                    b.Navigation("CanBo");

                    b.Navigation("ChucVu");
                });

            modelBuilder.Entity("HoiNongDan.Models.QuaTrinhDaoTao", b =>
                {
                    b.HasOne("HoiNongDan.Models.CanBo", "CanBo")
                        .WithMany("QuaTrinhDaoTaos")
                        .HasForeignKey("IDCanBo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhDaoTao_CanBo");

                    b.HasOne("HoiNongDan.Models.ChuyenNganh", "ChuyenNganh")
                        .WithMany("QuaTrinhDaoTaos")
                        .HasForeignKey("MaChuyenNganh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhDaoTao_ChuyenNganh");

                    b.HasOne("HoiNongDan.Models.HinhThucDaoTao", "HinhThucDaoTao")
                        .WithMany("QuaTrinhDaoTaos")
                        .HasForeignKey("MaHinhThucDaoTao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhDaoTao_HinhThucDaoTao");

                    b.HasOne("HoiNongDan.Models.LoaiBangCap", "LoaiBangCap")
                        .WithMany("QuaTrinhDaoTaos")
                        .HasForeignKey("MaLoaiBangCap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhDaoTao_LoaiBangCap");

                    b.Navigation("CanBo");

                    b.Navigation("ChuyenNganh");

                    b.Navigation("HinhThucDaoTao");

                    b.Navigation("LoaiBangCap");
                });

            modelBuilder.Entity("HoiNongDan.Models.QuaTrinhKyLuat", b =>
                {
                    b.HasOne("HoiNongDan.Models.CanBo", "CanBo")
                        .WithMany("QuaTrinhKyLuats")
                        .HasForeignKey("IDCanBo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhKyLuat_CanBo");

                    b.HasOne("HoiNongDan.Models.HinhThucKyLuat", "HinhThucKyLuat")
                        .WithMany("QuaTrinhKyLuats")
                        .HasForeignKey("MaHinhThucKyLuat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhKyLuat_HinhThucKyLuat");

                    b.Navigation("CanBo");

                    b.Navigation("HinhThucKyLuat");
                });

            modelBuilder.Entity("HoiNongDan.Models.QuaTrinhMienNhiem", b =>
                {
                    b.HasOne("HoiNongDan.Models.CanBo", "CanBo")
                        .WithMany("QuaTrinhMienNhiems")
                        .HasForeignKey("IDCanBo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhMienNhiem_CanBo");

                    b.HasOne("HoiNongDan.Models.CoSo", "CoSo")
                        .WithMany("QuaTrinhMienNhiems")
                        .HasForeignKey("IdCoSo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhMienNhiem_CoSo");

                    b.HasOne("HoiNongDan.Models.Department", "Department")
                        .WithMany("QuaTrinhMienNhiems")
                        .HasForeignKey("IdDepartment")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhMienNhiem_Department");

                    b.HasOne("HoiNongDan.Models.ChucVu", "ChucVu")
                        .WithMany("QuaTrinhMienNhiems")
                        .HasForeignKey("MaChucVu")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_QuaTrinhMienNhiem_ChucVu");

                    b.Navigation("CanBo");

                    b.Navigation("ChucVu");

                    b.Navigation("CoSo");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("HoiNongDan.Models.TinhThanhPho", b =>
                {
                    b.HasOne("HoiNongDan.Models.KhuVuc", "KhuVuc")
                        .WithMany("TinhThanhPhos")
                        .HasForeignKey("MaKhuVuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TinhThanhPho_KhuVuc");

                    b.Navigation("KhuVuc");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HoiNongDan.Models.BacLuong", b =>
                {
                    b.Navigation("CanBos");
                });

            modelBuilder.Entity("HoiNongDan.Models.CanBo", b =>
                {
                    b.Navigation("FileDinhKems");

                    b.Navigation("HoiVienVayVons");

                    b.Navigation("HuuTri");

                    b.Navigation("QuaTrinhBoNhiems");

                    b.Navigation("QuaTrinhBoiDuongs");

                    b.Navigation("QuaTrinhCongTacs");

                    b.Navigation("QuaTrinhDaoTaos");

                    b.Navigation("QuaTrinhKhenThuongs");

                    b.Navigation("QuaTrinhKyLuats");

                    b.Navigation("QuaTrinhMienNhiems");

                    b.Navigation("QuanHeGiaDinhs");
                });

            modelBuilder.Entity("HoiNongDan.Models.ChucVu", b =>
                {
                    b.Navigation("CanBos");

                    b.Navigation("QuaTrinhBoNhiems");

                    b.Navigation("QuaTrinhCongTacs");

                    b.Navigation("QuaTrinhMienNhiems");
                });

            modelBuilder.Entity("HoiNongDan.Models.ChuyenNganh", b =>
                {
                    b.Navigation("QuaTrinhDaoTaos");
                });

            modelBuilder.Entity("HoiNongDan.Models.CoSo", b =>
                {
                    b.Navigation("CanBos");

                    b.Navigation("Departments");

                    b.Navigation("QuaTrinhBoNhiems");

                    b.Navigation("QuaTrinhMienNhiems");
                });

            modelBuilder.Entity("HoiNongDan.Models.DanhHieuKhenThuong", b =>
                {
                    b.Navigation("QuaTrinhKhenThuong");
                });

            modelBuilder.Entity("HoiNongDan.Models.DanToc", b =>
                {
                    b.Navigation("CanBos");
                });

            modelBuilder.Entity("HoiNongDan.Models.Department", b =>
                {
                    b.Navigation("CanBos");

                    b.Navigation("QuaTrinhBoNhiems");

                    b.Navigation("QuaTrinhMienNhiems");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.Account", b =>
                {
                    b.Navigation("AccountInRoleModels");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.FunctionModel", b =>
                {
                    b.Navigation("PageFunctionModels");

                    b.Navigation("PagePermissionModels");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.MasterData.HocHam", b =>
                {
                    b.Navigation("CanBos");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.MasterData.PhuongXa", b =>
                {
                    b.Navigation("DiaBanHoatDongs");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.MasterData.TinhTrang", b =>
                {
                    b.Navigation("CanBos");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.MasterData.TrinhDoHocVan", b =>
                {
                    b.Navigation("CanBos");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.MenuModel", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("PageFunctionModels");

                    b.Navigation("PagePermissionModels");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.NgonNgu", b =>
                {
                    b.Navigation("TrinhDoNgoaiNgus");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.RolesModel", b =>
                {
                    b.Navigation("AccountInRoleModels");

                    b.Navigation("PagePermissionModels");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.TrinhDoChinhTri", b =>
                {
                    b.Navigation("CanBos");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.TrinhDoNgoaiNgu", b =>
                {
                    b.Navigation("CanBos");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.TrinhDoTinHoc", b =>
                {
                    b.Navigation("CanBos");
                });

            modelBuilder.Entity("HoiNongDan.Models.HeDaoTao", b =>
                {
                    b.Navigation("CanBos");
                });

            modelBuilder.Entity("HoiNongDan.Models.HinhThucDaoTao", b =>
                {
                    b.Navigation("QuaTrinhBoiDuongs");

                    b.Navigation("QuaTrinhDaoTaos");
                });

            modelBuilder.Entity("HoiNongDan.Models.HinhThucKhenThuong", b =>
                {
                    b.Navigation("QuaTrinhKhenThuong");
                });

            modelBuilder.Entity("HoiNongDan.Models.HinhThucKyLuat", b =>
                {
                    b.Navigation("QuaTrinhKyLuats");
                });

            modelBuilder.Entity("HoiNongDan.Models.KhuVuc", b =>
                {
                    b.Navigation("TinhThanhPhos");
                });

            modelBuilder.Entity("HoiNongDan.Models.LoaiBangCap", b =>
                {
                    b.Navigation("QuaTrinhDaoTaos");
                });

            modelBuilder.Entity("HoiNongDan.Models.LoaiDinhKem", b =>
                {
                    b.Navigation("FileDinhKems");
                });

            modelBuilder.Entity("HoiNongDan.Models.LoaiQuanHeGiaDinh", b =>
                {
                    b.Navigation("QuanHeGiaDinhs");
                });

            modelBuilder.Entity("HoiNongDan.Models.NgachLuong", b =>
                {
                    b.Navigation("BacLuongs");
                });

            modelBuilder.Entity("HoiNongDan.Models.PhanHe", b =>
                {
                    b.Navigation("CanBos");
                });

            modelBuilder.Entity("HoiNongDan.Models.QuanHuyen", b =>
                {
                    b.Navigation("DiaBanHoatDongs");

                    b.Navigation("PhuongXas");
                });

            modelBuilder.Entity("HoiNongDan.Models.TinhThanhPho", b =>
                {
                    b.Navigation("DiaBanHoatDongs");

                    b.Navigation("QuanHuyens");
                });

            modelBuilder.Entity("HoiNongDan.Models.TonGiao", b =>
                {
                    b.Navigation("CanBos");
                });
#pragma warning restore 612, 618
        }
    }
}
