// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using HoiNongDan.DataAccess;

#nullable disable

namespace HoiNongDan.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230422042057_addDanToc")]
    partial class addDanToc
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("HoiNongDan.Models.BacLuong", b =>
                {
                    b.Property<Guid>("MaBacLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HeSo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaNgachLuong")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenBacLuong")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaBacLuong");

                    b.HasIndex("MaNgachLuong");

                    b.ToTable("BacLuongModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.Bank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bank", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.ChucVu", b =>
                {
                    b.Property<Guid>("MaChucVu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("HeSoChucVu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<decimal?>("PhuCapDienThoai")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("MaChucVu");

                    b.ToTable("ChucVuModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.DanToc", b =>
                {
                    b.Property<string>("MaDanToc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenDanToc")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("MaDanToc");

                    b.ToTable("DanTocModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DepartmentCode");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DepartmentName");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Department", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.Account", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Actived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("AccountId");

                    b.ToTable("Account", "pms");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.AccountInRoleModel", b =>
                {
                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RolesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AccountId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("AccountInRoleModel", "pms");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.CoSo", b =>
                {
                    b.Property<Guid>("IdCoSo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 4, 22, 11, 20, 56, 733, DateTimeKind.Local).AddTicks(5981));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenCoSo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdCoSo");

                    b.ToTable("CoSoModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.FunctionModel", b =>
                {
                    b.Property<string>("FunctionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FunctionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OrderIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("FunctionId");

                    b.ToTable("FunctionModel", "pms");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.HistoryModel", b =>
                {
                    b.Property<Guid>("HistoryModifyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HistoryModifyId");

                    b.ToTable("HistoryModel", "utilities");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.MasterData.TrinhDoHocVan", b =>
                {
                    b.Property<string>("MaTrinhDoHocVan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenTrinhDoHocVan")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaTrinhDoHocVan");

                    b.ToTable("TrinhDoHocVanModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.MenuModel", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Href")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValue("#");

                    b.Property<string>("Icon")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MenuCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("MenuIdParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MenuType")
                        .HasColumnType("int");

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.HasKey("MenuId");

                    b.HasIndex("MenuIdParent");

                    b.ToTable("MenuModel", "pms");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.NgonNgu", b =>
                {
                    b.Property<string>("MaNgonNgu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenNgonNgu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("MaNgonNgu");

                    b.ToTable("NgonNguModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.PageFunctionModel", b =>
                {
                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FunctionId")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MenuId", "FunctionId");

                    b.HasIndex("FunctionId");

                    b.ToTable("PageFunctionModel", "pms");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.PagePermissionModel", b =>
                {
                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FunctionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RolesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MenuId", "FunctionId", "RolesId");

                    b.HasIndex("FunctionId");

                    b.HasIndex("RolesId");

                    b.ToTable("PagePermissionModel", "pms");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.RolesModel", b =>
                {
                    b.Property<Guid>("RolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Actived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("RolesCode")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RolesName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("RolesId");

                    b.ToTable("RolesModel", "pms");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.TrinhDoChinhTri", b =>
                {
                    b.Property<string>("MaTrinhDoChinhTri")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenTrinhDoChinhTri")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaTrinhDoChinhTri");

                    b.ToTable("TrinhDoChinhTriModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.TrinhDoNgoaiNgu", b =>
                {
                    b.Property<Guid>("MaTrinhDoNgoaiNgu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaNgonNgu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenTrinhDoNgoaiNgu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaTrinhDoNgoaiNgu");

                    b.HasIndex("MaNgonNgu");

                    b.ToTable("TrinhDoNgoaiNguModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.TrinhDoTinHoc", b =>
                {
                    b.Property<string>("MaTrinhDoTinHoc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenTrinhDoTinHoc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaTrinhDoTinHoc");

                    b.ToTable("TrinhDoTinHocModel", "tMasterData");
                });

            modelBuilder.Entity("HoiNongDan.Models.NgachLuong", b =>
                {
                    b.Property<string>("MaNgachLuong")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Actived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid?>("CreatedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 4, 22, 11, 20, 56, 733, DateTimeKind.Local).AddTicks(9503));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaLoai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NamTangLuong")
                        .HasColumnType("int");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("TenNgachLuong")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaNgachLuong");

                    b.ToTable("NgachLuongModel", "tMasterData");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HoiNongDan.Models.BacLuong", b =>
                {
                    b.HasOne("HoiNongDan.Models.NgachLuong", "NgachLuong")
                        .WithMany("BacLuongs")
                        .HasForeignKey("MaNgachLuong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BacLuong_NgachLuong");

                    b.Navigation("NgachLuong");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.AccountInRoleModel", b =>
                {
                    b.HasOne("HoiNongDan.Models.Entitys.Account", "Account")
                        .WithMany("AccountInRoleModels")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired()
                        .HasConstraintName("FK_AccountInRoleModel_Account");

                    b.HasOne("HoiNongDan.Models.Entitys.RolesModel", "RolesModel")
                        .WithMany("AccountInRoleModels")
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AccountInRoleModel_RolesModel");

                    b.Navigation("Account");

                    b.Navigation("RolesModel");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.MenuModel", b =>
                {
                    b.HasOne("HoiNongDan.Models.Entitys.MenuModel", null)
                        .WithMany("Children")
                        .HasForeignKey("MenuIdParent");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.PageFunctionModel", b =>
                {
                    b.HasOne("HoiNongDan.Models.Entitys.FunctionModel", "FunctionModel")
                        .WithMany("PageFunctionModels")
                        .HasForeignKey("FunctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PageFunctionModel_FunctionModel");

                    b.HasOne("HoiNongDan.Models.Entitys.MenuModel", "MenuModel")
                        .WithMany("PageFunctionModels")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PageFunctionModel_MenuModel");

                    b.Navigation("FunctionModel");

                    b.Navigation("MenuModel");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.PagePermissionModel", b =>
                {
                    b.HasOne("HoiNongDan.Models.Entitys.FunctionModel", "Function")
                        .WithMany("PagePermissionModels")
                        .HasForeignKey("FunctionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_PagePermissionModel_Function");

                    b.HasOne("HoiNongDan.Models.Entitys.MenuModel", "Menu")
                        .WithMany("PagePermissionModels")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_PagePermissionModel_Menu");

                    b.HasOne("HoiNongDan.Models.Entitys.RolesModel", "Roles")
                        .WithMany("PagePermissionModels")
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PagePermissionModel_Roles");

                    b.Navigation("Function");

                    b.Navigation("Menu");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.TrinhDoNgoaiNgu", b =>
                {
                    b.HasOne("HoiNongDan.Models.Entitys.NgonNgu", "NgonNgu")
                        .WithMany("TrinhDoNgoaiNgus")
                        .HasForeignKey("MaNgonNgu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TrinhDoNgoaiNgu_TrinhDoNgoaiNgu");

                    b.Navigation("NgonNgu");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.Account", b =>
                {
                    b.Navigation("AccountInRoleModels");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.FunctionModel", b =>
                {
                    b.Navigation("PageFunctionModels");

                    b.Navigation("PagePermissionModels");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.MenuModel", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("PageFunctionModels");

                    b.Navigation("PagePermissionModels");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.NgonNgu", b =>
                {
                    b.Navigation("TrinhDoNgoaiNgus");
                });

            modelBuilder.Entity("HoiNongDan.Models.Entitys.RolesModel", b =>
                {
                    b.Navigation("AccountInRoleModels");

                    b.Navigation("PagePermissionModels");
                });

            modelBuilder.Entity("HoiNongDan.Models.NgachLuong", b =>
                {
                    b.Navigation("BacLuongs");
                });
#pragma warning restore 612, 618
        }
    }
}
